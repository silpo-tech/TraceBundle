services:
  _defaults:
    public: true
  
  trace.client.middleware:
    class: TraceBundle\Middleware\ProxyTraceIdMiddleware
    arguments:
      - '@trace.storage'
      - '%trace.id_header_name%'
  
  trace.client.middleware_sentry:
    class: TraceBundle\Middleware\SentryGuzzleTracingMiddlewareAdapter

  trace.monolog_add_trace_id_processor:
    class: TraceBundle\Monolog\AddTraceIdProcessor
    arguments:
      - '@trace.storage'
      - '%trace.id_log_extra_name%'
    tags: [ monolog.processor ]
  
  TraceBundle\Storage\TraceIdStorageInterface:
    alias: trace.storage
    public: false
  
  trace.storage:
    class: TraceBundle\Storage\TraceIdStorage
    tags:
      - { name: kernel.reset, method: reset }

  TraceBundle\Generator\TraceGeneratorInterface:
    alias: trace.generator
    public: false

  trace.generator:
    class: TraceBundle\Generator\UuidGenerator
  
  trace.http.request_id_init_subscriber:
    class: TraceBundle\EventSubscriber\RequestIdInitSubscriber
    arguments:
      - '@trace.storage'
      - '@trace.generator'
      - '%trace.id_header_name%'
    tags:
      - kernel.event_subscriber

  trace.sentry.event_subscriber:
    class: TraceBundle\EventSubscriber\SentryTransactionEnrichSubscriber
    arguments:
      - '@trace.storage'
      - '%trace.id_header_name%'
    tags:
      - kernel.event_subscriber

  trace.http.response_subscriber:
    class: TraceBundle\EventSubscriber\WriteRequestIdToResponseSubscriber
    arguments:
      - '@trace.storage'
      - '%trace.id_header_name%'
    tags:
      - kernel.event_subscriber

  trace.console.command_subscriber:
    class: TraceBundle\EventSubscriber\ConsoleSubscriber
    arguments:
      - '@trace.storage'
      - '@trace.generator'
    tags:
      - kernel.event_subscriber
